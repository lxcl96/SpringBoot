# Druid整合SpringBoot配置
spring:
  datasource:
    druid:
      ############## filters表示开启哪个过滤器组件  下面的filter中都enable了#########################
      #filters: stat,wall,slf4j,
      # 数据源配置，如果去掉druid这级别，也是正确的
      url: jdbc:mysql:///ssm_crdu
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: 123456
      ############## filter表示，每个filter的单独配置信息（可以配置了但是没有开启，只有enable属性才表示开启）#########################
      filter:
        # 开启sql监控统计功能 【默认开启】
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 1000
        # sql防火墙
        wall:
          db-type: mysql
          enabled: true

        # 配置日志
        slf4j:
          enabled: true

      # 开启Druid的内置监控页面
      stat-view-servlet:
        enabled: true
        login-username: ly
        login-password: ly
        url-pattern: /druid/* #servlet的路径
        reset-enable: false # 禁用监控页面的重置按钮
      # 内置监控与web关联
      web-stat-filter:
        enabled: true
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除监控路径
        url-pattern: /* # 监控请求地址，过滤所有地址

      # 内置监控与Spring关联
      aop-patterns: com.ly.admin.*   # 监控spring中bean组件命令 【此处为切入点表达式】

  aop:
    auto: false # 不开启aop自动代理
  redis:
#    host: localhost
#    port: 6379
    url: redis://:1024@127.0.0.1:6379
    # username: auth # 低版本redis不用配置用户名，因为本来就没有
    client-type: jedis
#    password: 1024




# 配置Mybatis
mybatis:
  # 指定mybatis全局配置文件
#  config-location: classpath:mybatis/mybatis-config.xml
  # 指定mapper接口对应的xml文件
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true # 开启驼峰转化

# mybatis-plus和mybatis的配置文件前缀不一样
mybatis-plus:
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true


# 开启指定包日志等级【便于查看sql】
# 格式为：log.level.目标类的全类名=等级
# properties对于的格式：logging.level.com.ly.admin.mapperInterface=debug
logging:
  level:
    com:
      ly:
        admin:
          mapperInterface: debug

management:
  endpoints: # 所有端点配置
    web:
      base-path: /actuator
      exposure:
        include: '*' # *表示以web方式暴露所以端点
    enabled-by-default: true # 开启所有默认监控端点（不配置也可以）

  endpoint: # 单独一个端点配置
    health:
      show-details: always
      enabled: true  #
    info:
      enabled: true

    metrics:
      enabled: true
